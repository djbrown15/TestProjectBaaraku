// <auto-generated />
using System;
using TestService.Core.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace TestService.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220407110417_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("FundTransfer.Core.Entities.Account", b =>
                {
                    b.Property<int>("AcctId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("AccountBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("double");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.HasKey("AcctId");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.HasIndex("CustId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FundTransfer.Core.Entities.Customer", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("CustId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNo")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FundTransfer.Core.Entities.Transaction", b =>
                {
                    b.Property<int>("TranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcctId")
                        .HasColumnType("int");

                    b.Property<double>("TranAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("double");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TranType")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2)");

                    b.HasKey("TranId");

                    b.HasIndex("AcctId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("FundTransfer.Core.Entities.Account", b =>
                {
                    b.HasOne("FundTransfer.Core.Entities.Customer", "Customer")
                        .WithMany("Account")
                        .HasForeignKey("CustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FundTransfer.Core.Entities.Transaction", b =>
                {
                    b.HasOne("FundTransfer.Core.Entities.Account", "Account")
                        .WithMany("Transaction")
                        .HasForeignKey("AcctId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FundTransfer.Core.Entities.Account", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("FundTransfer.Core.Entities.Customer", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
